{"version":3,"sources":["actions/user.js","components/AddCategory.js","components/AddProduct.js","pages/AdminHome.js","App.js","serviceWorker.js","reducers/user.js","reducers/category.js","index.js"],"names":["type","AddCategory","handleExitAddCategory","React","useState","category","setCategory","error","setError","className","onClick","placeholder","onChange","event","target","value","axios","post","name","then","res","console","log","data","catch","response","style","color","useStyles","makeStyles","theme","input","display","AddProduct","exitFormAddProduct","content","setContent","zoom","setZoom","categories","useSelector","state","classes","TextField","id","label","margin","accept","multiple","htmlFor","Button","variant","component","Input","startAdornment","InputAdornment","position","editor","ClassicEditor","config","ckfinder","uploadUrl","evt","newContent","getData","length","select","helperText","map","option","MenuItem","key","_id","AdminHome","dispatch","useDispatch","user","history","useHistory","showAddCategory","setShowAddCategory","showAddProduct","setShowProduct","username","userAction","window","localStorage","removeItem","push","App","selectedFile","setSelectedFile","status","uploadedImg","setUploadedImg","ckeditor","setCkeditor","LoadImg","src","url","alt","path","onSubmit","preventDefault","formData","FormData","append","method","headers","files","exact","Boolean","location","hostname","match","userReducer","action","categoryReducer","reducer","combineReducers","catetoryReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.82398d2c.chunk.js","sourcesContent":["\r\nconst checkTokenSuccessly = (user) => {\r\n    return {\r\n        type: 'CHECK_TOKEN_SUCCESSLY',\r\n        data: user\r\n    }\r\n}\r\n\r\nconst checkTokenError = {\r\n    type: 'CHECK_TOKEN_ERROR'\r\n}\r\n\r\nconst logout = {\r\n    type: 'LOGOUT'\r\n}\r\nexport default {\r\n    checkTokenSuccessly,\r\n    checkTokenError,\r\n    logout\r\n}","import React from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function AddCategory({ handleExitAddCategory }) {\r\n    const [category, setCategory] = React.useState('')\r\n    const [error, setError] = React.useState('')\r\n    function handleChange(event) {\r\n        setCategory(event.target.value)\r\n    }\r\n\r\n    function handleAdd() {\r\n        axios.post('/api/category', { name: category })\r\n            .then(res => {\r\n                setError('')\r\n                console.log(res.data)\r\n                handleExitAddCategory()\r\n            })\r\n            .catch(error => {\r\n                setError(error.response.data)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className='add-category'>\r\n            <div className='exit'>\r\n                <button onClick={handleExitAddCategory}>Thoát</button>\r\n            </div>\r\n            <div className='wrap-form-add-category'>\r\n                <div className='form-add-category'>\r\n                    <input type='text' placeholder='Tên sản phẩm' onChange={handleChange} />\r\n                    <button onClick={handleAdd}>Thêm mới</button>\r\n                    <p style={{color:'white'}}>{error}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\n\r\n\r\nexport default function AddProduct({ exitFormAddProduct }) {\r\n    const [content, setContent] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [zoom, setZoom] = useState(false)\r\n    console.log(content)\r\n    const categories = useSelector(state => state.categories)\r\n    const classes = useStyles();\r\n\r\n    function onChangeCKEditor(evt, editor) {\r\n        var newContent = editor.getData();\r\n        setContent(newContent)\r\n    }\r\n\r\n    function onChangeInput(event) {\r\n        const { name, value } = event.target\r\n        console.log(\"name of input: \", name)\r\n        console.log(\"value of input:\", value)\r\n        if (\"category\") {\r\n            setCategory(value)\r\n            console.log('setstated')\r\n        }\r\n    }\r\n    function handleZoom() {\r\n        setZoom(!zoom)\r\n    }\r\n\r\n    return (\r\n        <div className='add-product'>\r\n            <div className='exit'>\r\n                <button onClick={exitFormAddProduct}>Thoát</button>\r\n                <button onClick={handleZoom}>Zoom</button>\r\n            </div>\r\n            <div className={!zoom ? 'form-add-product ' : 'form-add-product zoom'}>\r\n                <form>\r\n                    <TextField id=\"standard-basic\" label=\"Tên sản phẩm\" />\r\n                    <div style={{ margin: \"10px 0px 0px 0px\" }}>\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            className={classes.input}\r\n                            id=\"contained-button-file\"\r\n                            multiple\r\n                            type=\"file\"\r\n                        />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                Upload\r\n                            </Button>\r\n                        </label>\r\n                    </div>\r\n                    <Input\r\n                        startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n                    />\r\n                    <Input\r\n                        startAdornment={<InputAdornment position=\"start\">$ Old</InputAdornment>}\r\n                    />\r\n                    <div className=\"ckeditor\">\r\n                        <CKEditor\r\n                            editor={ClassicEditor}\r\n                            data={content}\r\n                            config={{\r\n                                ckfinder: {\r\n                                    uploadUrl: '/api/uploads'\r\n                                }\r\n                            }}\r\n                            onChange={onChangeCKEditor}\r\n                        />\r\n                    </div>\r\n                    {categories.length > 0 ? <TextField\r\n                        id=\"standard-select-currency\"\r\n                        select\r\n                        label=\"Category\"\r\n                        helperText=\"Please select a category\"\r\n                        value={category}\r\n                        name=\"category\"\r\n                        onChange={onChangeInput}\r\n                    >\r\n                        {categories.map((option) => (\r\n                            <MenuItem key={option._id} value={option._id}>\r\n                                {option.name}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField> : 'Loading....'}\r\n                    <br />\r\n                    <br />\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Thêm mới\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport userAction from '../actions/user'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport AddCategory from '../components/AddCategory'\r\nimport AddProduct from '../components/AddProduct'\r\n\r\nexport default function AdminHome() {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n    const history = useHistory()\r\n    const [showAddCategory, setShowAddCategory] = React.useState(false)\r\n    const [showAddProduct,setShowProduct] = React.useState(false)\r\n\r\n    function handleLogout() {\r\n        console.log(\"logout\")\r\n        dispatch(userAction.logout)\r\n        window.localStorage.removeItem(\"token\")\r\n        history.push('/login')\r\n    }\r\n\r\n    function handleAddCategory() {\r\n        setShowAddCategory(true)\r\n    }\r\n\r\n    function handleExitAddCategory() {\r\n        setShowAddCategory(false)\r\n    }\r\n\r\n    function handleAddProduct(){\r\n        setShowProduct(true)\r\n    }\r\n\r\n    function exitFormAddProduct(){\r\n        setShowProduct(false)\r\n    }\r\n    \r\n    return (\r\n        <div className='admin-home'>\r\n            <div className='admin-home-header'>\r\n                <div className=''><b>Harukostore.net</b></div>\r\n                <div>\r\n                    <input className='search' type='text' placeholder='Tìm kiếm sản phẩm' />\r\n                </div>\r\n                <div className='profile'>\r\n                    <p>Username: {user.username}</p>\r\n                    <p>Tên người dùng: {user.name}</p>\r\n                    <button onClick={handleLogout}>Log out</button>\r\n                </div>\r\n            </div>\r\n            <div className='admin-home-categories'>\r\n                <p>Welcome {user.name}</p>\r\n            </div>\r\n            <div>\r\n                <button onClick={handleAddProduct} >Thêm mới sản phẩm</button>\r\n                <button onClick={handleAddCategory}>Thêm mới danh mục</button>\r\n            </div>\r\n            {showAddCategory && <AddCategory handleExitAddCategory={handleExitAddCategory} />}\r\n            {showAddProduct && <AddProduct exitFormAddProduct={exitFormAddProduct} />}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './css/admin-home.css'\nimport AdminHome from './pages/AdminHome'\nimport axios from 'axios'\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = React.useState(null)\n  const [uploadedImg, setUploadedImg] = React.useState({ status: 'init' })\n  const [ckeditor,setCkeditor] = React.useState('content')\n\n  console.log(ckeditor)\n  function handleSelectedFile(event) {\n    setSelectedFile(event.target.files[0])\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault()\n    setUploadedImg({ status: 'uploading' })\n    const formData = new FormData()\n    formData.append('myFile', selectedFile)\n    axios({\n      method: 'post',\n      url: '/upload',\n      data: formData,\n      headers: { \"Content-Type\": \"multipart/form-data\", \"Authorization\": \"token ne\" }\n    }).then(res =>\n      setUploadedImg({ status: 'uploaded', url: res.data }))\n      .catch(error => { setUploadedImg({ status: 'error', error: error.response.data }) })\n  }\n\n  function LoadImg() {\n    switch (uploadedImg.status) {\n      case 'init':\n        return null\n      case 'uploading':\n        return <p>{uploadedImg.error}</p>\n      case 'uploaded':\n        return <img src={uploadedImg.url} alt={uploadedImg.url} />\n      default:\n        return null\n    }\n  }\n  return (\n    <Router>\n      <Switch>\n        <Route path='/admin'>\n          <AdminHome />\n        </Route>\n        <Route path='/upload'>\n          <form onSubmit={handleSubmit}>\n            <input type='file' onChange={handleSelectedFile} />\n            <br />\n            <button type='submit'>Upload</button>\n          </form>\n          <LoadImg />\n          <br />\n          <CKEditor\n            editor={ClassicEditor}\n            data={ckeditor}\n            config={\n              {\n                ckfinder:{\n                  uploadUrl:'/ckeditor/upload'\n                }\n              }\n            }\n            onChange={(event, editor) => {\n              const data = editor.getData();\n              setCkeditor(data)\n            }}\n          />\n        </Route>\n        <Route path='/' exact>\n          Home\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nfunction userReducer(state = {}, action) {\r\n    switch (action.type) {\r\n        case 'CHECK_TOKEN_SUCCESSLY':\r\n            return action.data\r\n        case 'CHECK_TOKEN_ERROR':\r\n            return {}\r\n        case 'LOGOUT':\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer","function categoryReducer(state = [], action) {\r\n    switch (action.type) {\r\n        case 'INIT':\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default categoryReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { createStore, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport userReducer from './reducers/user'\nimport catetoryReducer from './reducers/category'\n\nconst reducer = combineReducers({\n  user: userReducer,\n  categories: catetoryReducer\n})\n\nconst store = createStore(reducer, composeWithDevTools())\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}